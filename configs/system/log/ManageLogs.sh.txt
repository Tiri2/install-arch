#!/bin/zsh

log_file="/var/log/system/logger.log"

log() {
  print -r -- "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$log_file"
}

human_readable() {
    local size=$1
    if (( size >= 1073741824 )); then
        awk "BEGIN {printf \"%.2f GiB\", $size/1073741824}"
    elif (( size >= 1048576 )); then
        awk "BEGIN {printf \"%.2f MiB\", $size/1048576}"
    elif (( size >= 1024 )); then
        awk "BEGIN {printf \"%.2f KiB\", $size/1024}"
    else
        printf "%d B" "$size"
    fi
}

# Prozess 1: Komprimiert *.log-Dateien aus /tmp/log/ready/
(
  while true; do
    files=(/tmp/log/ready/*.log(N))
    sleep 2

    for file in $files; do
      if [[ -f $file ]]; then
        size=$(stat -c %s "$file")
        log "Size is $(human_readable "$size") for $file"
        if /usr/bin/zstdmt -f --rm --no-progress \
             --output-dir-flat=/var/log/tasks "$file"; then
          log "Compressed and moved: $file"
        else
          log "Error compressing: $file"
        fi
      fi
    done

    sleep 60
  done
) &

# Prozess 2: Löscht alte Dateien aus /var/log/tasks/, wenn das Gesamtvolumen zu groß ist
(
  # .max_size enthält das Limit in Bytes, z.B. "1073741824" für 1 GiB
  MAX_SIZE=$(grep -E '^[0-9]+' /var/log/tasks/.max_size | head -n1)
  if [[ -z "$MAX_SIZE" || ! "$MAX_SIZE" =~ ^[0-9]+$ ]]; then
    MAX_SIZE=$((5 * 1024**3))  # Default 5 GiB
  fi

  log "using following value for maxsize"
  log "$(human_readable "$MAX_SIZE")"

  while true; do
    # ermittel die Gesamtgröße in Bytes
    used_size=$(du -sb /var/log/tasks | awk '{print $1}')
    if (( used_size > MAX_SIZE )); then
      # älteste .zst-Datei auswählen
      oldest=$(ls -1t /var/log/tasks/*.zst(N) | tail -n1)
      if [[ -n "$oldest" && -f $oldest ]]; then
        # MQ_PUB-Extraktion, falls noch nicht gemacht
        if [[ "${oldest##*.}" == "zst" && "${oldest: -7}" != ".mq.zst" ]]; then
          if zstdgrep -q 'MQ_PUB\[' "$oldest"; then
            if zstdgrep 'MQ_PUB\[' "$oldest" \
                 | zstd -o "${oldest}.mq.zst" --no-progress; then
              log "Extracted MQ_PUB from $oldest to ${oldest}.mq.zst"
            else
              log "Failed to extract MQ_PUB from $oldest"
            fi
          fi
        fi
        # alte Datei löschen
        if rm -- "$oldest"; then
          log "Deleted old log: $oldest (was $(human_readable "$used_size"), limit $(human_readable "$MAX_SIZE"))"
        else
          log "Failed to delete: $oldest"
        fi
      fi
    fi
    sleep 30
  done
) &

wait
