#!/bin/sh

# create dir /tmp/log/
mkdir -p /tmp/log/ready
chown -R flex:beer /tmp/log/
chmod -R 774 /tmp/log

# Creating config.json and/or updating jar file
/usr/bin/java -Dlog4j2.Script.enableLanguages=groovy -Dlog4j.configurationFile=/var/system/tools/configurator/log4j2.xml -jar /var/system/tools/configurator/configurator.jar boot

# Get newest changes of install-arch from git
# if [[ -d "/var/system/tools/install-arch/" ]]; then
#    git -C /var/system/tools/install-arch/ pull &> /dev/null
# else
#    git clone https://github.com/Tiri2/install-arch.git /var/system/tools/install-arch/ &> /dev/null
# fi

# Boot Loggen
echo -e "====================================\nBoot: $(/usr/bin/date)" >> /var/log/system/boot.log

#!/bin/bash

# === Variablen ===
REMOTE_URL="https://10.3.1.7/fs/utils/cheatsheet.sh"
LOCAL_PATH="/var/system/scripts/cheatsheet.sh"
TMP_PATH="/tmp/cheatsheet_remote.sh"

# === Prüfen ob Server erreichbar ist ===
if curl -s --head --request GET -k "$REMOTE_URL" | grep -q "200"; then

    # Remote-Version herunterladen (still)
    curl -s -k -o "$TMP_PATH" "$REMOTE_URL"

    # Prüfen, ob sie sich von der lokalen unterscheidet
    if ! cmp -s "$TMP_PATH" "$LOCAL_PATH"; then
        mv "$TMP_PATH" "$LOCAL_PATH"
        chmod +x "$LOCAL_PATH"
    else
        rm -f "$TMP_PATH"
    fi