<Configuration status="warn" name="flextasks" monitorInterval="1">
    <!--
    auf flexSystem muss -Denv=prod mit angegeben werden
    Änderungen sind bei den Properties in der Regel keine notwendig!
    -->
    <Properties>
        <Select>
            <!-- prod -->
            <SystemPropertyArbiter propertyName="env" propertyValue="prod">
                <Property name="prefix"></Property>
                <Property name="taskname">${env:TASKNAME}</Property>
                <Property name="path">/tmp/log</Property>
                <Property name="mode">prod</Property>
                <Property name="filepattern-date">%d{yyyy-MM-dd-HHmmss}-%i</Property>
            </SystemPropertyArbiter>
            <!-- dev -->
            <DefaultArbiter>
                <Property name="taskname">unconfigured</Property>
                <Property name="path">/tmp/log</Property>
                <Property name="mode">dev</Property>
                <Property name="filepattern-date">%d{yyyy-MM-dd}-%i</Property>
            </DefaultArbiter>
        </Select>
    </Properties>
    <!-- Filter:
        es wird ein Tuppel aus LogLevel und LogMarker übergeben, beides muss zutreffen. Wird "" übergeben ist vergleich immer TRUE
 
        ["", "TASK"]        : LogMarker TASK wird in jeden fall ausgegeben, unabhängig vom LogLevel.
        ["DEBUG", "TASK"]   : LogMarker TASK wird nur ausgegeben wenn Loglevel = DEBUG ist.
        ["ERROR", ""]       : LogLevel ERROR wird in jeden fall ausgegeben, unabhängig vom LogMarker.
 
 
        Wichtig: beim Hinzufügen/Löschen von Filtern nicht vergessen einen Beistrich(',') als Separator zu verwenden(außer beim letzten Filter)
    -->
    <Scripts>
        <Script name="filter" language="groovy"><![CDATA[
                def filters =
                            [
                                ["", "DB"],
                                ["", "DP"],
                                ["INFO", "TASK"],
                                ["", "MQ"],
                                ["", "CORE"],
                                ["DEBUG", "TASK"],
                                ["DEBUG", "PROJ"],
                                ["TRACE", ""],
                                ["ERROR", ""]
                            ]
                for(f in filters){
                        String level = f[0]
                        String marker = f[1]
                        Boolean validMarker = marker.equals("") || (logEvent.Marker !=null && logEvent.Marker.isInstanceOf(marker))
                        Boolean validLevel = level.equals("") || logEvent.Level.name.equals(level)
 
                        if(validMarker && validLevel){
                            return true;
                        }
                }
                return false
        ]]></Script>
    </Scripts>
 
    <!-- hier können bei Bedarf LogLevels für die einzelnen Logger abgeändert werden -->
    <Loggers>
        <AsyncRoot level="OFF" includeLocation="true">
        </AsyncRoot>
        <AsyncLogger name="eu.flexsolution.lib" level="INFO">
            <AppenderRef ref="default" />
        </AsyncLogger>
        <AsyncLogger name="eu.flexsolution.core" level="INFO">
            <AppenderRef ref="default" />
        </AsyncLogger>
        <AsyncLogger name="eu.flexsolution.task" level="DEBUG">
            <AppenderRef ref="default" />
        </AsyncLogger>
 
        <!--Hibernate-->
        <AsyncLogger name="org.hibernate.SQL" level="DEBUG">
            <AppenderRef ref="hibernate" />
        </AsyncLogger>
        <AsyncLogger name="org.hibernate.orm.jdbc.bind" level="TRACE">
            <AppenderRef ref="hibernate" />
        </AsyncLogger>
    </Loggers>
 
    <!-- Ab hier nichts ändern! -->
    <Appenders>
        <RollingFile name="default" fileName="${path}/${prefix}${taskname}.log" filePattern="${path}/ready/${prefix}${taskname}-${filepattern-date}.log" append="true">
            <ScriptFilter onMatch="ACCEPT" onMismatch="DENY">
                <ScriptRef ref="filter"/>
            </ScriptFilter>
 
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %style{${taskname}(%pid)}{bright} %highlight{%-5level}{FATAL=bg_red bright, ERROR=red bright, WARN=yellow, INFO=dim green, DEBUG=blue, TRACE=cyan} %-30notEmpty{%marker} - %maxLen{%msg}{100000}%xEx - %class{-2}{36}.%M:%L%n"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>
 
        <RollingFile name="hibernate" fileName="${path}/${prefix}${taskname}-hibernate.log" filePattern="${path}/ready/${prefix}${taskname}-hibernate-${filepattern-date}.log" append="true">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} ${taskname}-hibernate %-5level %-30notEmpty{[%marker]} - %msg%xEx - %class{36} %L %M%n"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>
    </Appenders>
</Configuration>